# (if you remap CapsLock as well it's much easier to reach
#  that key-combination without breaking your fingers).
unbind C-b
set -g prefix C-a

# takes _my_ default-shell also as shell in tmux-sessions
set-option -g default-shell /bin/zsh

# this should make tmux much more responsive since the
# default-delay is very small
set -sg escape-time 1

# start counting windows at 1 (and not 0)
set -g base-index 1
setw -g pane-base-index 1

# define a custom binding to reload the tmux-configuration
# in the current sessein
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# send the CTRL-a combination through to the underlying
# program if triggered twice (so first for tmux and then
# tmux sends the second occurence through to the program)
bind C-a send-prefix

# rebind the split-window keys to (notice: -v and -h are
# counter-intuitive) - the new pane will be opened at the
# current command
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"



# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o stat= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l


# use the vim movement keys to move around panes (they are
# repeateable - so you don't have to push the PREFIX-key
# over and over again)
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# use again the vim-known movement keys in order to resize
# panes - notice these keys are upper case
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# mouse works as expected
set-option -g mouse on

# define some colors of the status bar in general
set -g status-fg white
set -g status-bg colour235

# define colors of the window-tabs in the bar
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# how messages are displayed
set -g message-bg red
set -g message-fg white

# define how the titles of the window-tabs look like
set -g set-titles on
set -g set-titles-string ' #I-#W '

# status bar itself (left as well as right part)
# set -g status-utf8 on
set -g status-interval 60    # refresh status-bar every n seconds
set -g status-justify left
set -g status-left-length 40
set -g status-left ' Session: #S@#h |'
set -g status-right ' | %d.%m.%Y %H:%M #[default]'

set -g visual-activity on
setw -g monitor-activity on

# enables vi-keys when in copy-mode
setw -g mode-keys vi

# use esc to trigger copy mode (original is unusable on german keyboards)
unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

set-window-option -g xterm-keys on

set-window-option -g mode-fg white
set-window-option -g mode-bg red
set-window-option -g mode-attr bright

# Window options
#setw -g utf8 on
set-window-option -g clock-mode-colour blue
set-window-option -g clock-mode-style 24
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize off
#
# set-window-option -g window-status-format ' #I-#W '
# set-window-option -g window-status-current-format ' #I-#W '

#powerline source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf


# List of plugins
# <prefix>+I        Install list of plugins
# <prefix>+U        Update list (or cherry-pick) plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
